server:
  port: 0 # 랜덤포트사용
#  servlet:
#    contextPath: /order-service # 모든 url의 prefix로 userservice가 들어감

spring:
  application:
    name: order-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
#  datasource:
#    url: jdbc:h2:mem:/~/test
#    username: sa
#    password:
#    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create
    defer-datasource-initialization: true
    properties:
      hibernate:
        show_sql: true
        format_sql: true

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}} # 인스턴스id 등록
  client:
    register-with-eureka: true # eurekaserver 에 클라이언트로 등록
    fetch-registry: true # eureka server 로부터 인스턴스들의 정보를 주기적으로 가져옴(캐시를 사용하지 않고 갱신된 정보를 가져옴)
    service-url:
      defaultZone: http://localhost:8761/eureka # eureka server 에 서비스의 url 등록함

logging:
  level:
    com.example.orderservice: debug

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh